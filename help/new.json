{
  "name": "new",
  "/description": "Creates a new workspace and an initial Angular application.",
  "description": "워크스페이스를 생성하고 기본 Angular 애플리케이션 프로젝트도 생성합니다.",
  "/longDescription": "Creates and initializes a new Angular application that is the default project for a new workspace.\n\nProvides interactive prompts for optional configuration, such as adding routing support.\nAll prompts can safely be allowed to default.\n\n* The new workspace folder is given the specified project name, and contains configuration files at the top level.\n\n* By default, the files for a new initial application (with the same name as the workspace) are placed in the `src/` subfolder. Corresponding end-to-end tests are placed in the `e2e/` subfolder.\n\n* The new application's configuration appears in the `projects` section of the `angular.json` workspace configuration file, under its project name.\n\n* Subsequent applications that you generate in the workspace reside in the `projects/` subfolder.\n\nIf you plan to have multiple applications in the workspace, you can create an empty workspace by setting the `--createApplication` option to false.\nYou can then use `ng generate application` to create an initial application.\nThis allows a workspace name different from the initial app name, and ensures that all applications reside in the `/projects` subfolder, matching the structure of the configuration file.",
  "longDescription": "워크스페이스를 생성하고 이 워크스페이스의 기본 프로젝트로 Angular 애플리케이션을 생성합니다.\n\n이 명령을 실행하면 라우팅 기능을 추가할지 등에 대한 추가 환경설정이 프롬프트로 진행됩니다.\n모든 항목에 기본값을 사용해도 됩니다.\n\n* 새로 생성되는 워크스페이스 폴더 이름은 프로젝트 이름과 같고, 워크스페이스 최상위 폴더에 환경설정 파일이 생성됩니다.\n\n* 함께 생성되는 기본 애플리케이션은 워크스페이스 이름과 같으며, 워크스페이스 폴더 아래 `src/` 폴더에 생성됩니다. 이 애플리케이션의 엔드-투-엔드 테스트 파일은 `e2e/` 폴더에 생성됩니다.\n\n* 새로 생성되는 애플리케이션의 환경설정은 워크스페이스 환경설정 파일 `angular.json` 파일의 `projects` 섹션에 구성됩니다.\n\n* 이 워크스페이스에서 추가로 생성하는 애플리케이션은 `projects/` 폴더에 생성됩니다.\n\n한 워크스페이스에 애플리케이션을 여러개 만들려고 한다면 `--createApplication` 옵션을 `false`로 지정해서 빈 워크스페이스를 생성하면 됩니다.\n그 다음에 워크스페이스 안에서 `ng generate application` 명령을 실행하면 첫번째 애플리케이션의 기본 코드가 생성됩니다.\n이 방법을 활용하면 기본 애플리케이션의 이름을 워크스페이스 이름과 다르게 생성할 수 있으며, 환경설정 파일의 구조와 동일하게 모든 애플리케이션 코드를 `/projects` 폴더 안에 둘 수 있습니다.",
  "options": [
    {
      "name": "collection",
      "/description": "A collection of schematics to use in generating the initial application.",
      "description": "초기 애플리케이션 생성에 사용될 컬렉션을 지정합니다.",
      "type": "string",
      "required": false,
      "aliases": [
        "c"
      ],
      "hidden": false
    },
    {
      "name": "verbose",
      "/description": "Add more details to output logging.",
      "description": "로그를 자세하게 출력합니다.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [
        "v"
      ],
      "hidden": false
    },
    {
      "name": "help",
      "/description": "Shows a help message for this command in the console.",
      "description": "이 명령의 도움말을 표시합니다.",
      "type": "boolean",
      "types": [
        "boolean",
        "string"
      ],
      "default": false,
      "enum": [
        true,
        false,
        "json",
        "JSON"
      ],
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "dry-run",
      "/description": "Run through and reports activity without writing out results.",
      "description": "명령 실행 결과를 디스크에 반영하지 않고 실행만 해볼 때 사용합니다.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [
        "d"
      ],
      "hidden": false
    },
    {
      "name": "force",
      "/description": "Force overwriting of existing files.",
      "description": "이미 존재하는 파일이 있으면 덮어씁니다.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [
        "f"
      ],
      "hidden": false
    },
    {
      "name": "interactive",
      "/description": "Enable interactive input prompts.",
      "description": "입력 프롬프트를 상호작용 방식으로 변경합니다.",
      "type": "boolean",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "defaults",
      "/description": "Disable interactive input prompts for options with a default.",
      "description": "입력 프롬프트의 상호작용을 없애고 기본값을 적용합니다.",
      "type": "boolean",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "directory",
      "/description": "The directory name to create the workspace in.",
      "description": "워크스페이스가 생성될 디렉토리 이름을 지정합니다.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "name",
      "/description": "The name of the new workspace and initial project.",
      "description": "워크스페이스와 기본 생성될 프로젝트 이름을 지정합니다.",
      "type": "string",
      "required": false,
      "aliases": [],
      "format": "html-selector",
      "hidden": false,
      "positional": 0
    },
    {
      "name": "skip-install",
      "/description": "Do not install dependency packages.",
      "description": "의존성 패키지를 설치하지 않습니다.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "skip-git",
      "/description": "Do not initialize a git repository.",
      "description": "git 저장소를 생성하지 않습니다.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [
        "g"
      ],
      "hidden": false
    },
    {
      "name": "commit",
      "/description": "Initial git repository commit information.",
      "description": "git 저장소 커밋 메시지를 초기화합니다.",
      "type": "boolean",
      "default": true,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "new-project-root",
      "/description": "The path where new projects will be created, relative to the new workspace root.",
      "description": "새 워크스페이스 최상위 폴더를 기준으로 프로젝트가 생성될 위치를 지정합니다.",
      "type": "string",
      "default": "projects",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "inline-style",
      "/description": "Include styles inline in the component TS file. By default, an external styles file is created and referenced in the component TypeScript file.",
      "description": "컴포넌트 스타일을 컴포넌트 클래스 TypeScript 파일 안에 작성합니다. 기본값은 컴포넌트 클래스 파일과 분리하여 별도 스타일 파일로 두는 것입니다.",
      "type": "boolean",
      "required": false,
      "aliases": [
        "s"
      ],
      "hidden": false,
      "userAnalytics": 9
    },
    {
      "name": "inline-template",
      "/description": "Include template inline in the component TS file. By default, an external template file is created and referenced in the component TypeScript file.",
      "description": "컴포넌트 템플릿을 컴포넌트 클래스 TypeScript 파일 안에 작성합니다. 기본값은 컴포넌트 클래스 파일과 분리하여 별도 템플릿 파일로 두는 것입니다.",
      "type": "boolean",
      "required": false,
      "aliases": [
        "t"
      ],
      "hidden": false,
      "userAnalytics": 10
    },
    {
      "name": "view-encapsulation",
      "/description": "The view encapsulation strategy to use in the initial project.",
      "description": "기본 프로젝트에서 사용할 뷰 캡슐화 정책을 지정합니다.",
      "type": "string",
      "enum": [
        "Emulated",
        "Native",
        "None",
        "ShadowDom"
      ],
      "required": false,
      "aliases": [],
      "hidden": false,
      "userAnalytics": 11
    },
    {
      "name": "routing",
      "/description": "Generate a routing module for the initial project.",
      "description": "기본 프로젝트용 라우팅 모듈을 생성합니다.",
      "type": "boolean",
      "required": false,
      "aliases": [],
      "hidden": false,
      "userAnalytics": 17
    },
    {
      "name": "prefix",
      "/description": "The prefix to apply to generated selectors for the initial project.",
      "description": "기본 프로젝트에서 셀렉터의 접두사로 사용될 문자열을 지정합니다.",
      "type": "string",
      "default": "app",
      "required": false,
      "aliases": [
        "p"
      ],
      "format": "html-selector",
      "hidden": false
    },
    {
      "name": "style",
      "/description": "The file extension or preprocessor to use for style files.",
      "description": "스타일 파일로 사용할 파일 확장자나 전처리기를 지정합니다.",
      "type": "string",
      "enum": [
        "css",
        "scss",
        "sass",
        "less",
        "styl"
      ],
      "required": false,
      "aliases": [],
      "hidden": false,
      "userAnalytics": 5
    },
    {
      "name": "skip-tests",
      "/description": "Do not generate \"spec.ts\" test files for the new project.",
      "description": "테스트 파일 \"spec.ts\"을 생성하지 않습니다.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [
        "S"
      ],
      "hidden": false,
      "userAnalytics": 12
    },
    {
      "name": "create-application",
      "/description": "Create a new initial application project in the 'src' folder of the new workspace. When false, creates an empty workspace with no initial application. You can then use the generate application command so that all applications are created in the projects folder.",
      "description": "워크스페이스를 새로 만들면서 기본 애플리케이션을 함께 생성할지 지정합니다. false로 지정하면 워크스페이스만 생성하고 기본 애플리케이션을 생성하지 않습니다. 모든 애플리케이션을 projects 폴더 안에 두려면 이 방식을 사용하면 됩니다.",
      "type": "boolean",
      "default": true,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "minimal",
      "/description": "Create a workspace without any testing frameworks. (Use for learning purposes only.)",
      "description": "테스트 프레임워크 없이 워크스페이스를 생성합니다. (이 옵션은 공부용으로만 사용하세요.)",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false,
      "userAnalytics": 14
    },
    {
      "name": "strict",
      "/description": "Creates a workspace with stricter type checking and stricter bundle budgets settings. This setting helps improve maintainability and catch bugs ahead of time. For more information, see https://angular.io/strict",
      "description": "엄격한 타입 검사 규칙과 빌드 결과물 설정으로 워크스페이스를 생성합니다. 이 옵션을 사용하면 애플리케이션의 유지보수성을 높이기 때문에 버그를 사전에 발견할 수 있습니다. 자세한 내용은 https://angular.kr/strict 문서를 참고하세요.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false,
      "userAnalytics": 7
    },
    {
      "name": "legacy-browsers",
      "/description": "Add support for legacy browsers like Internet Explorer using differential loading.",
      "description": "증분 빌드를 활용하는 방식으로 Internet Explorer와 같은 오래된 브라우저 지원 설정을 추가합니다.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "package-manager",
      "/description": "The package manager used to install dependencies.",
      "description": "의존성 패키지로 사용할 패키지 매니저를 지정합니다.",
      "type": "string",
      "enum": [
        "npm",
        "yarn",
        "pnpm",
        "cnpm"
      ],
      "required": false,
      "aliases": [],
      "hidden": false
    }
  ],
  "aliases": [
    "n"
  ],
  "scope": "out",
  "hidden": false
}