{
  "name": "generate",
  "/description": "Generates and/or modifies files based on a schematic.",
  "description": "스키매틱에 정의된 대로 Angular 구성요소를 생성하거나 수정합니다.",
  "options": [
    {
      "name": "schematic",
      "/description": "The schematic or collection:schematic to generate.",
      "description": "생성하려는 스키매틱을 지정합니다.",
      "type": "string",
      "required": false,
      "aliases": [],
      "hidden": false,
      "positional": 0,
      "subcommands": {
        "app-shell": {
          "name": "app-shell",
          "/description": "Generates an app shell for running a server-side version of an app.",
          "description": "서버사이드 렌더링이 지원되는 애플리케이션 기본 코드를 생성합니다.",
          "options": [
            {
              "name": "client-project",
              "/description": "The name of the related client app.",
              "description": "관련 클라이언트 앱 이름을 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "route",
              "/description": "Route path used to produce the app shell.",
              "description": "앱 기본 코드에 적용될 라우팅 경로를 지정합니다.",
              "type": "string",
              "default": "shell",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "app-id",
              "/description": "The app ID to use in withServerTransition().",
              "description": "withServerTransition()에 사용될 앱 ID를 지정합니다.",
              "type": "string",
              "default": "serverApp",
              "required": false,
              "aliases": [],
              "format": "html-selector",
              "hidden": false
            },
            {
              "name": "main",
              "/description": "The name of the main entry-point file.",
              "description": "메인 진입점이 되는 파일의 이름을 지정합니다.",
              "type": "string",
              "default": "main.server.ts",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": false
            },
            {
              "name": "app-dir",
              "/description": "The name of the application directory.",
              "description": "애플리케이션 디렉토리의 이름을 지정합니다.",
              "type": "string",
              "default": "app",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": false
            },
            {
              "name": "root-module-file-name",
              "/description": "The name of the root module file",
              "description": "최상위 모듈 파일의 이름을 지정합니다.",
              "type": "string",
              "default": "app.server.module.ts",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": false
            },
            {
              "name": "root-module-class-name",
              "/description": "The name of the root module class.",
              "description": "최상위 모듈 클래스의 이름을 지정합니다.",
              "type": "string",
              "default": "AppServerModule",
              "required": false,
              "aliases": [],
              "format": "html-selector",
              "hidden": false
            }
          ],
          "aliases": []
        },
        "application": {
          "name": "application",
          "/description": "Generates a new basic app definition in the \"projects\" subfolder of the workspace.",
          "description": "현재 워크스페이스의 \"projects/\" 폴더 안에 기본 앱을 생성합니다.",
          "options": [
            {
              "name": "project-root",
              "/description": "The root directory of the new app.",
              "description": "앱이 생성될 최상위 디렉토리를 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": true
            },
            {
              "name": "name",
              "/description": "The name of the new app.",
              "description": "새로 생성할 앱 이름을 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "inline-style",
              "/description": "Include styles inline in the root component.ts file. Only CSS styles can be included inline. Default is false, meaning that an external styles file is created and referenced in the root component.ts file.",
              "description": "최상위 컴포넌트의 스타일을 component.ts 파일 안에 내장합니다. 인라인 스타일에는 CSS 문법만 사용할 수 있습니다. 기본값은 false이며, false 값을 사용하면 스타일 파일이 별도로 생성됩니다.",
              "type": "boolean",
              "required": false,
              "aliases": [
                "s"
              ],
              "hidden": false,
              "userAnalytics": 9
            },
            {
              "name": "inline-template",
              "/description": "Include template inline in the root component.ts file. Default is false, meaning that an external template file is created and referenced in the root component.ts file. ",
              "description": "최상위 컴포넌트의 템플릿을 component.ts 파일 안에 내장합니다. 기본값은 false이며, false 값을 사용하면 템플릿 파일이 별도로 생성됩니다.",
              "type": "boolean",
              "required": false,
              "aliases": [
                "t"
              ],
              "hidden": false,
              "userAnalytics": 10
            },
            {
              "name": "view-encapsulation",
              "/description": "The view encapsulation strategy to use in the new app.",
              "description": "새로 생성될 앱에 적용되는 캡슐화 정책을 지정합니다.",
              "type": "string",
              "enum": [
                "Emulated",
                "Native",
                "None",
                "ShadowDom"
              ],
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 11
            },
            {
              "name": "routing",
              "/description": "Create a routing NgModule.",
              "description": "라우팅 NgModule을 생성합니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 17
            },
            {
              "name": "prefix",
              "/description": "A prefix to apply to generated selectors.",
              "description": "셀렉터의 접두사를 지정합니다.",
              "type": "string",
              "default": "app",
              "required": false,
              "aliases": [
                "p"
              ],
              "format": "html-selector",
              "hidden": false
            },
            {
              "name": "style",
              "/description": "The file extension or preprocessor to use for style files.",
              "description": "스타일 파일에 사용될 파일 확장자나 전처리기를 지정합니다.",
              "type": "string",
              "default": "css",
              "enum": [
                "css",
                "scss",
                "sass",
                "less",
                "styl"
              ],
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 5
            },
            {
              "name": "skip-tests",
              "/description": "Do not create \"spec.ts\" test files for the application.",
              "description": "애플리케이션 테스트 파일을 생성하지 않습니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [
                "S"
              ],
              "hidden": false,
              "userAnalytics": 12
            },
            {
              "name": "skip-package-json",
              "/description": "Do not add dependencies to the \"package.json\" file.",
              "description": "\"package.json\" 파일에 의존성 패키지를 추가하지 않습니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "minimal",
              "/description": "Create a bare-bones project without any testing frameworks. (Use for learning purposes only.)",
              "description": "테스트 프레임워크 없이 최소한의 코드로 프로젝트를 생성합니다.(학습용으로만 사용하세요.)",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 14
            },
            {
              "name": "skip-install",
              "/description": "Skip installing dependency packages.",
              "description": "의존성 패키지를 설치하지 않습니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "lint-fix",
              "/description": "Apply lint fixes after generating the application.",
              "description": "애플리케이션을 생성한 후에 린트 툴을 실행합니다.",
              "type": "boolean",
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "/deprecated": "Use \"ng lint --fix\" directly instead.",
              "deprecated": "\"ng lint --fix\"를 사용하세요."
            },
            {
              "name": "strict",
              "/description": "Creates an application with stricter bundle budgets settings.",
              "description": "애플리케이션 번들링 환경설정을 더 엄격하게 지정합니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 7
            },
            {
              "name": "legacy-browsers",
              "/description": "Add support for legacy browsers like Internet Explorer using differential loading.",
              "description": "Internet Explorer와 같이 오래된 브라우저를 지원하기 위해 증분 로딩 기능을 활성화합니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false
            }
          ],
          "aliases": []
        },
        "class": {
          "name": "class",
          "/description": "Creates a new generic class definition in the given or default project.",
          "description": "클래스를 생성합니다.",
          "options": [
            {
              "name": "name",
              "/description": "The name of the new class.",
              "description": "클래스 이름을 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "path",
              "/description": "The path at which to create the class, relative to the workspace root.",
              "description": "클래스를 생성할 위치를 워크스페이스 최상위 폴더 기준으로 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "/description": "The name of the project.",
              "description": "클래스를 생성할 프로젝트 이름을 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "skip-tests",
              "/description": "Do not create \"spec.ts\" test files for the new class.",
              "description": "새로 만든 클래스의 테스트 파일을 생성하지 않습니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 12
            },
            {
              "name": "type",
              "/description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
              "description": "파일 이름 뒤에 개발자가 정의한 타입을 추가합니다. \"name.type.ts\"와 같은 형식이 됩니다.",
              "type": "string",
              "default": "",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "lint-fix",
              "/description": "Apply lint fixes after generating the class.",
              "description": "클래스를 생성한 후에 린트 툴을 실행합니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "/deprecated": "Use \"ng lint --fix\" directly instead.",
              "deprecated": "\"ng lint --fix\"를 사용하세요."
            }
          ],
          "aliases": []
        },
        "component": {
          "name": "component",
          "/description": "Creates a new generic component definition in the given or default project.",
          "description": "컴포넌트를 생성합니다.",
          "options": [
            {
              "name": "path",
              "/description": "The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.",
              "description": "컴포넌트 파일이 생성될 위치를 현재 워크스페이스 기준으로 지정합니다. 따로 지정하지 않으면 최상위 폴더에 컴포넌트 이름으로 생성됩니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "/description": "The name of the project.",
              "description": "컴포넌트를 생성할 프로젝트 이름을 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "name",
              "/description": "The name of the component.",
              "description": "컴포넌트 이름을 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "display-block",
              "/description": "Specifies if the style will contain `:host { display: block; }`.",
              "description": "기본 스타일에 `:host { display: block; }`를 지정합니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [
                "b"
              ],
              "hidden": false
            },
            {
              "name": "inline-style",
              "/description": "Include styles inline in the component.ts file. Only CSS styles can be included inline. By default, an external styles file is created and referenced in the component.ts file.",
              "description": "컴포넌트 스타일을 component.ts 파일에 내장합니다. 인라인 스타일에는 CSS 문법만 사용할 수 있습니다. 기본값은 false이며, false 값을 사용하면 스타일 파일이 별도로 생성됩니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [
                "s"
              ],
              "hidden": false,
              "userAnalytics": 9
            },
            {
              "name": "inline-template",
              "/description": "Include template inline in the component.ts file. By default, an external template file is created and referenced in the component.ts file.",
              "description": "컴포넌트 템플릿을 component.ts 파일 안에 내장합니다. 기본값은 false이며, false 값을 사용하면 템플릿 파일이 별도로 생성됩니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [
                "t"
              ],
              "hidden": false,
              "userAnalytics": 10
            },
            {
              "name": "view-encapsulation",
              "/description": "The view encapsulation strategy to use in the new component.",
              "description": "새로 생성될 컴포넌트에 적용되는 캡슐화 정책을 지정합니다.",
              "type": "string",
              "enum": [
                "Emulated",
                "Native",
                "None",
                "ShadowDom"
              ],
              "required": false,
              "aliases": [
                "v"
              ],
              "hidden": false,
              "userAnalytics": 11
            },
            {
              "name": "change-detection",
              "/description": "The change detection strategy to use in the new component.",
              "description": "새로 생성될 변화 감지 정책을 지정합니다.",
              "type": "string",
              "default": "Default",
              "enum": [
                "Default",
                "OnPush"
              ],
              "required": false,
              "aliases": [
                "c"
              ],
              "hidden": false
            },
            {
              "name": "prefix",
              "/description": "The prefix to apply to the generated component selector.",
              "description": "컴포넌트 셀렉터의 접두사를 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [
                "p"
              ],
              "hidden": false
            },
            {
              "name": "style",
              "/description": "The file extension or preprocessor to use for style files.",
              "description": "스타일 파일에 사용될 파일 확장자나 전처리기를 지정합니다.",
              "type": "string",
              "default": "css",
              "enum": [
                "css",
                "scss",
                "sass",
                "less",
                "styl"
              ],
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 5
            },
            {
              "name": "type",
              "/description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
              "description": "파일 이름 뒤에 개발자가 정의한 타입을 추가합니다. \"name.type.ts\"와 같은 형식이 됩니다.",
              "type": "string",
              "default": "Component",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "skip-tests",
              "/description": "Do not create \"spec.ts\" test files for the new component.",
              "description": "새로 만든 컴포넌트의 테스트 파일을 생성하지 않습니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 12
            },
            {
              "name": "flat",
              "/description": "Create the new files at the top level of the current project.",
              "description": "현재 프로젝트의 최상위 폴더에 새 컴포넌트를 생성합니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "skip-import",
              "/description": "Do not import this component into the owning NgModule.",
              "description": "새로 만든 컴포넌트를 NgModule에 추가하지 않습니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 18
            },
            {
              "name": "selector",
              "/description": "The HTML selector to use for this component.",
              "description": "컴포넌트의 HTML 셀렉터를 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "html-selector",
              "hidden": false
            },
            {
              "name": "skip-selector",
              "/description": "Specifies if the component should have a selector or not.",
              "description": "셀렉터를 사용하지 않는 컴포넌트를 생성할 때 지정합니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "module",
              "/description": "The declaring NgModule.",
              "description": "컴포넌트가 추가될 NgModule을 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [
                "m"
              ],
              "hidden": false
            },
            {
              "name": "export",
              "/description": "The declaring NgModule exports this component.",
              "description": "새로 생성한 컴포넌트를 NgModule exports 배열에 추가합니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 19
            },
            {
              "name": "entry-component",
              "/description": "The new component is the entry component of the declaring NgModule.",
              "description": "새로 만드는 컴포넌트를 NgModule의 진입 컴포넌트로 지정합니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "/deprecated": "Since version 9.0.0 with Ivy, entryComponents is no longer necessary.",
              "deprecated": "9.0.0 버전부터는 Ivy를 사용하기 때문에 더이상 entryComponents를 사용하지 않습니다."
            },
            {
              "name": "lint-fix",
              "/description": "Apply lint fixes after generating the component.",
              "description": "컴포넌트를 생성한 후에 린트 툴을 실행합니다.",
              "type": "boolean",
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "/deprecated": "Use \"ng lint --fix\" directly instead.",
              "deprecated": "\"ng lint --fix\"를 사용하세요."
            }
          ],
          "aliases": []
        },
        "directive": {
          "name": "directive",
          "/description": "Creates a new generic directive definition in the given or default project.",
          "description": "디렉티브를 생성합니다.",
          "options": [
            {
              "name": "name",
              "/description": "The name of the new directive.",
              "description": "새로 생성할 디렉티브의 이름을 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "path",
              "/description": "The path at which to create the interface that defines the directive, relative to the workspace root.",
              "description": "디렉티브가 생성될 위치를 워크스페이스 최상위 폴더를 기준으로 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "/description": "The name of the project.",
              "description": "디렉티브를 생성할 프로젝트 이름을 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "prefix",
              "/description": "A prefix to apply to generated selectors.",
              "description": "디렉티브 셀렉터의 접두사를 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [
                "p"
              ],
              "hidden": false
            },
            {
              "name": "skip-tests",
              "/description": "Do not create \"spec.ts\" test files for the new class.",
              "description": "새로 만든 디렉티브의 테스트 파일을 생성하지 않습니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 12
            },
            {
              "name": "skip-import",
              "/description": "Do not import this directive into the owning NgModule.",
              "description": "새로 만든 디렉티브를 NgModule에 추가하지 않습니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 18
            },
            {
              "name": "selector",
              "/description": "The HTML selector to use for this directive.",
              "description": "디렉티브가 사용할 HTML 셀렉터를 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "html-selector",
              "hidden": false
            },
            {
              "name": "flat",
              "/description": "When true (the default), creates the new files at the top level of the current project.",
              "description": "기본값은 true이며, 기본값을 사용하면 현재 프로젝트의 최상위 폴더에 새 디렉티브를 생성합니다.",
              "type": "boolean",
              "default": true,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "module",
              "/description": "The declaring NgModule.",
              "description": "디렉티브가 추가될 NgModule을 지정합니다.",
              "type": "string",
              "required": false,
              "aliases": [
                "m"
              ],
              "hidden": false
            },
            {
              "name": "export",
              "/description": "The declaring NgModule exports this directive.",
              "description": "새로 생성한 디렉티브를 NgModule exports 배열에 추가합니다.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 19
            },
            {
              "name": "lint-fix",
              "/description": "Apply lint fixes after generating the directive.",
              "description": "디렉티브를 생성한 후에 린트 툴을 실행합니다.",
              "type": "boolean",
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "/deprecated": "Use \"ng lint --fix\" directly instead.",
              "deprecated": "\"ng lint --fix\"를 사용하세요."
            }
          ],
          "aliases": []
        },
        "enum": {
          "name": "enum",
          "description": "Generates a new, generic enum definition for the given or default project.",
          "options": [
            {
              "name": "name",
              "description": "The name of the enum.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "path",
              "description": "The path at which to create the enum definition, relative to the current workspace.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "description": "The name of the project in which to create the enum. Default is the configured default project for the workspace.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "lint-fix",
              "description": "Apply lint fixes after generating the enum.",
              "type": "boolean",
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "deprecated": "Use \"ng lint --fix\" directly instead."
            }
          ],
          "aliases": []
        },
        "guard": {
          "name": "guard",
          "description": "Generates a new, generic route guard definition in the given or default project.",
          "options": [
            {
              "name": "name",
              "description": "The name of the new route guard.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "skip-tests",
              "description": "Do not create \"spec.ts\" test files for the new guard.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 12
            },
            {
              "name": "flat",
              "description": "When true (the default), creates the new files at the top level of the current project.",
              "type": "boolean",
              "default": true,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "path",
              "description": "The path at which to create the interface that defines the guard, relative to the current workspace.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "description": "The name of the project.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "lint-fix",
              "description": "Apply lint fixes after generating the guard.",
              "type": "boolean",
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "deprecated": "Use \"ng lint --fix\" directly instead."
            },
            {
              "name": "implements",
              "description": "Specifies which interfaces to implement.",
              "type": "array",
              "required": false,
              "aliases": [],
              "hidden": false
            }
          ],
          "aliases": []
        },
        "interceptor": {
          "name": "interceptor",
          "description": "Creates a new, generic interceptor definition in the given or default project.",
          "options": [
            {
              "name": "name",
              "description": "The name of the interceptor.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "path",
              "description": "The path at which to create the interceptor, relative to the workspace root.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "description": "The name of the project.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "flat",
              "description": "When true (the default), creates files at the top level of the project.",
              "type": "boolean",
              "default": true,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "skip-tests",
              "description": "Do not create \"spec.ts\" test files for the new interceptor.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 12
            },
            {
              "name": "lint-fix",
              "description": "Apply lint fixes after generating the interceptor.",
              "type": "boolean",
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "deprecated": "Use \"ng lint --fix\" directly instead."
            }
          ],
          "aliases": []
        },
        "interface": {
          "name": "interface",
          "description": "Creates a new generic interface definition in the given or default project.",
          "options": [
            {
              "name": "name",
              "description": "The name of the interface.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "path",
              "description": "The path at which to create the interface, relative to the workspace root.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "description": "The name of the project.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "prefix",
              "description": "A prefix to apply to generated selectors.",
              "type": "string",
              "default": "",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "lint-fix",
              "description": "Apply lint fixes after generating the interface.",
              "type": "boolean",
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "deprecated": "Use \"ng lint --fix\" directly instead."
            },
            {
              "name": "type",
              "description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 1
            }
          ],
          "aliases": []
        },
        "library": {
          "name": "library",
          "description": "Creates a new generic library project in the current workspace.",
          "options": [
            {
              "name": "name",
              "description": "The name of the library.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "entry-file",
              "description": "The path at which to create the library's public API file, relative to the workspace root.",
              "type": "string",
              "default": "public-api",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": false
            },
            {
              "name": "prefix",
              "description": "A prefix to apply to generated selectors.",
              "type": "string",
              "default": "lib",
              "required": false,
              "aliases": [
                "p"
              ],
              "format": "html-selector",
              "hidden": false
            },
            {
              "name": "skip-package-json",
              "description": "Do not add dependencies to the \"package.json\" file. ",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "skip-install",
              "description": "Do not install dependency packages.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "skip-ts-config",
              "description": "Do not update \"tsconfig.json\" to add a path mapping for the new library. The path mapping is needed to use the library in an app, but can be disabled here to simplify development.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "lint-fix",
              "description": "Apply lint fixes after generating the library.",
              "type": "boolean",
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "deprecated": "Use \"ng lint --fix\" directly instead."
            }
          ],
          "aliases": []
        },
        "module": {
          "name": "module",
          "description": "Creates a new generic NgModule definition in the given or default project.",
          "options": [
            {
              "name": "name",
              "description": "The name of the NgModule.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "path",
              "description": "The path at which to create the NgModule, relative to the workspace root.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "description": "The name of the project.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "routing",
              "description": "Create a routing module.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 17
            },
            {
              "name": "routing-scope",
              "description": "The scope for the new routing module.",
              "type": "string",
              "default": "Child",
              "enum": [
                "Child",
                "Root"
              ],
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "route",
              "description": "The route path for a lazy-loaded module. When supplied, creates a component in the new module, and adds the route to that component in the `Routes` array declared in the module provided in the `--module` option.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "flat",
              "description": "Create the new files at the top level of the current project root. ",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "common-module",
              "description": "The new NgModule imports \"CommonModule\". ",
              "type": "boolean",
              "default": true,
              "required": false,
              "aliases": [],
              "hidden": true
            },
            {
              "name": "module",
              "description": "The declaring NgModule.",
              "type": "string",
              "required": false,
              "aliases": [
                "m"
              ],
              "hidden": false
            },
            {
              "name": "lint-fix",
              "description": "Apply lint fixes after generating the module.",
              "type": "boolean",
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "deprecated": "Use \"ng lint --fix\" directly instead."
            }
          ],
          "aliases": []
        },
        "pipe": {
          "name": "pipe",
          "description": "Creates a new generic pipe definition in the given or default project.",
          "options": [
            {
              "name": "name",
              "description": "The name of the pipe.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "path",
              "description": "The path at which to create the pipe, relative to the workspace root.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "description": "The name of the project.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "flat",
              "description": "When true (the default) creates files at the top level of the project.",
              "type": "boolean",
              "default": true,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "skip-tests",
              "description": "Do not create \"spec.ts\" test files for the new pipe.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 12
            },
            {
              "name": "skip-import",
              "description": "Do not import this pipe into the owning NgModule.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 18
            },
            {
              "name": "module",
              "description": "The declaring NgModule.",
              "type": "string",
              "required": false,
              "aliases": [
                "m"
              ],
              "hidden": false
            },
            {
              "name": "export",
              "description": "The declaring NgModule exports this pipe.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 19
            },
            {
              "name": "lint-fix",
              "description": "Apply lint fixes after generating the pipe.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "deprecated": "Use \"ng lint --fix\" directly instead."
            }
          ],
          "aliases": []
        },
        "resolver": {
          "name": "resolver",
          "description": "Generates a new, generic resolver definition in the given or default project.",
          "options": [
            {
              "name": "name",
              "description": "The name of the new resolver.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "skip-tests",
              "description": "Do not create \"spec.ts\" test files for the new resolver.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 12
            },
            {
              "name": "flat",
              "description": "When true (the default), creates the new files at the top level of the current project.",
              "type": "boolean",
              "default": true,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "path",
              "description": "The path at which to create the interface that defines the resolver, relative to the current workspace.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "description": "The name of the project.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            }
          ],
          "aliases": []
        },
        "service": {
          "name": "service",
          "description": "Creates a new, generic service definition in the given or default project.",
          "options": [
            {
              "name": "name",
              "description": "The name of the service.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "path",
              "description": "The path at which to create the service, relative to the workspace root.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "description": "The name of the project.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "flat",
              "description": "When true (the default), creates files at the top level of the project.",
              "type": "boolean",
              "default": true,
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "skip-tests",
              "description": "Do not create \"spec.ts\" test files for the new service.",
              "type": "boolean",
              "default": false,
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 12
            },
            {
              "name": "lint-fix",
              "description": "Apply lint fixes after generating the service.",
              "type": "boolean",
              "required": false,
              "aliases": [],
              "hidden": false,
              "userAnalytics": 15,
              "deprecated": "Use \"ng lint --fix\" directly instead."
            }
          ],
          "aliases": []
        },
        "service-worker": {
          "name": "service-worker",
          "description": "Pass this schematic to the \"run\" command to create a service worker",
          "options": [
            {
              "name": "project",
              "description": "The name of the project.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "target",
              "description": "The target to apply service worker to.",
              "type": "string",
              "default": "build",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "configuration",
              "description": "The configuration to apply service worker to.",
              "type": "string",
              "default": "production",
              "required": false,
              "aliases": [],
              "hidden": false
            }
          ],
          "aliases": []
        },
        "web-worker": {
          "name": "web-worker",
          "description": "Creates a new generic web worker definition in the given or default project.",
          "options": [
            {
              "name": "path",
              "description": "The path at which to create the worker file, relative to the current workspace.",
              "type": "string",
              "required": false,
              "aliases": [],
              "format": "path",
              "hidden": true
            },
            {
              "name": "project",
              "description": "The name of the project.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "target",
              "description": "The target to apply web worker to.",
              "type": "string",
              "default": "build",
              "required": false,
              "aliases": [],
              "hidden": false
            },
            {
              "name": "name",
              "description": "The name of the worker.",
              "type": "string",
              "required": false,
              "aliases": [],
              "hidden": false,
              "positional": 0
            },
            {
              "name": "snippet",
              "description": "Add a worker creation snippet in a sibling file of the same name.",
              "type": "boolean",
              "default": true,
              "required": false,
              "aliases": [],
              "hidden": false
            }
          ],
          "aliases": []
        }
      }
    },
    {
      "name": "help",
      "description": "Shows a help message for this command in the console.",
      "type": "boolean",
      "types": [
        "boolean",
        "string"
      ],
      "default": false,
      "enum": [
        true,
        false,
        "json",
        "JSON"
      ],
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "dry-run",
      "description": "Run through and reports activity without writing out results.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [
        "d"
      ],
      "hidden": false
    },
    {
      "name": "force",
      "description": "Force overwriting of existing files.",
      "type": "boolean",
      "default": false,
      "required": false,
      "aliases": [
        "f"
      ],
      "hidden": false
    },
    {
      "name": "interactive",
      "description": "Enable interactive input prompts.",
      "type": "boolean",
      "required": false,
      "aliases": [],
      "hidden": false
    },
    {
      "name": "defaults",
      "description": "Disable interactive input prompts for options with a default.",
      "type": "boolean",
      "required": false,
      "aliases": [],
      "hidden": false
    }
  ],
  "aliases": [
    "g"
  ],
  "scope": "in",
  "hidden": false
}